# =============================================================================
# AWS INFRASTRUCTURE CONFIGURATION
# =============================================================================
# This file contains AWS-specific infrastructure configurations for Datafold deployment.

global:
  serverName: "datafold.your-domain.com"  # Replace with your domain
  cloudProvider: "aws"
  storageClass: "gp3"  # AWS EBS gp3 storage class
  awsTargetGroupArn: "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/datafold-tg/abcdef1234567890"
  vpcCidr: "10.0.0.0/16"
  statusCheckToken: "your-status-check-token"
  deployment: "datafold-prod"
  customSecrets: []
  manageSecretsYourself: false
  common:
    labels:
      environment: "production"
      cloud-provider: "aws"
    annotations: {}
  optional:
    intercom: "false"
    pylon: "false"
    googleAuth: "false"

# AWS-specific infrastructure configurations
nginx:
  port: 80
  gcpNegName: ""

datadog:
  install: true
  env: "production"
  host: "datadog-agent.datadog.svc.cluster.local"
  logs:
    port: 10518
  metrics:
    port: 8125
  apm:
    port: 8126

# AWS Service Account configurations with IAM roles
server:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-server-role"
    name: "datafold-server"

scheduler:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-scheduler-role"
    name: "datafold-scheduler"

dfshell:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-dfshell-role"
    name: "datafold-dfshell"

operator:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-operator-role"
    name: "datafold-operator"

worker:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-role"
    name: "datafold-worker"

worker-interactive:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-interactive-role"
    name: "datafold-worker-interactive"

worker-catalog:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-catalog-role"
    name: "datafold-worker-catalog"

worker-singletons:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-singletons-role"
    name: "datafold-worker-singletons"

worker-monitor:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-monitor-role"
    name: "datafold-worker-monitor"

worker-temporal:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-worker-temporal-role"
    name: "datafold-worker-temporal"

storage-worker:
  serviceAccount:
    create: true
    automount: true
    roleArn: "arn:aws:iam::123456789012:role/datafold-storage-worker-role"
    name: "datafold-storage-worker"

# AWS Database configurations (RDS/Aurora)
clickhouse:
  user: "default"
  password: "your-clickhouse-password"
  port: 9000
  database: "clickhouse"
  # For AWS, you might use RDS or Aurora
  # host: "your-clickhouse-cluster.cluster-xyz.us-west-2.rds.amazonaws.com"

redis:
  password: "your-redis-password"
  port: 6379
  # For AWS, you might use ElastiCache
  # host: "your-redis-cluster.xyz.cache.amazonaws.com"

postgres:
  user: "datafold"
  password: "your-postgres-password"
  database: "datafold"
  port: 5432
  ro_user: "datafold_ro"
  ro_password: "your-readonly-password"
  datadog_password: "your-datadog-password"
  # For AWS, you might use RDS
  # host: "your-postgres-instance.xyz.us-west-2.rds.amazonaws.com" 